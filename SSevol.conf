#Note: currently the times for custom events are based on the b0.1 files (and would need to be tweaked for the b0.01 files)
#Also, I still need to put in the data with gravity on for all planets (after I run the models).
mesh
{
    data MercurySSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Mercury.raw
	data VenusSSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Venus.raw
    data EarthSSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Earth.raw
    data MarsSSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Mars.raw
    data JupiterSSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Jupiter.raw
    data SaturnSSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Saturn.raw
    data UranusSSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Uranus.raw
    data NeptuneSSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Neptune.raw
    data PlutoSSevolData ./modules/SolarSystemEvol/SSevol_b0.1_Pluto.raw

	data HZData     ./modules/SolarSystemEvol/HZevol_b0.3.raw
    data SunData    ./modules/SolarSystemEvol/Sunevol_b0.1.raw
    #data SSevolData ./modules/SolarSystemEvol/SSevol_b0.01.raw
	#data HZData     ./modules/SolarSystemEvol/HZevol_b0.01.raw
    #data SunData    ./modules/SolarSystemEvol/Sunevol_b0.01.raw

    glslVersion 330

    enableTypeCheck true
    creaseAngle 180.0
    cullRadius 1000

	
    propertyCollection
    {
        SSevolParams
        {
			vec1f SSsimUserealtime 1.0
			vec1f SSsimRealtimestart 4.75 //11.85 //Gyr
			vec1f SSsimRealtimeend 12.5 //Gyr
			vec1f SSsimMasstimestart 0.
			vec1f SSsimMasstimeend 6198. #b0.1
##			vec1f SSsimMasstimeend 5950. #b0.01
			vec1f SSsimShowstart 0.0
			vec1f SSsimDtmin 0.01


        }

    }

#Time Evolving Orbits	
    pass # Mercury
    {
        passScale 1
        passEnable true
        useDataObject MercurySSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 1
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }
    pass # Venus
    {
        passScale 1
        passEnable true
        useDataObject VenusSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 2
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }
    pass # Earth
    {
        passScale 1
        passEnable true
        useDataObject EarthSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 3
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }
    pass # Mars
    {
        passScale 1
        passEnable true
        useDataObject MarsSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 4
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }
    pass # Jupiter
    {
        passScale 1
        passEnable true
        useDataObject JupiterSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 5
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }
    pass # Saturn
    {
        passScale 1
        passEnable true
        useDataObject SaturnSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 6
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }
    pass # Neptune
    {
        passScale 1
        passEnable true
        useDataObject NeptuneSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 7
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }
    pass # Uranus
    {
        passScale 1
        passEnable true
        useDataObject UranusSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 8
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }
    pass # Pluto
    {
        passScale 1
        passEnable true
        useDataObject PlutoSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 0
				parameter1f cval 9
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 3
                }
            }
        }
    }	

###############################################################	
# Initial Orbits
    pass # Mercury
    {
        passScale 1
        passEnable true
        useDataObject MercurySSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 1
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }
    pass # Venus
    {
        passScale 1
        passEnable true
        useDataObject VenusSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 2
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }
    pass # Earth
    {
        passScale 1
        passEnable true
        useDataObject EarthSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 3
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }
    pass # Mars
    {
        passScale 1
        passEnable true
        useDataObject MarsSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 4
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }
    pass # Jupiter
    {
        passScale 1
        passEnable true
        useDataObject JupiterSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 5
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }
    pass # Saturn
    {
        passScale 1
        passEnable true
        useDataObject SaturnSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 6
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }
    pass # Neptune
    {
        passScale 1
        passEnable true
        useDataObject NeptuneSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 7
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }
    pass # Uranus
    {
        passScale 1
        passEnable true
        useDataObject UranusSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 8
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }
    pass # Pluto
    {
        passScale 1
        passEnable true
        useDataObject PlutoSSevolData

        shader
        {
            type defaultMeshShader
            {
			
				parameter1f doStart 1
				parameter1f cval 9
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin

                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/simOrbits_geometry.glsl

                glState
                {
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
					UV_LINE_WIDTH 1
                }
            }
        }
    }

#####################################################
#Habitable Zone	
	pass # HZ 
    {
        passScale 1
        passEnable true
        useDataObject HZData
		
        shader
        {
            type defaultMeshShader
            {
				parameter1i doBack 0
				
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
#				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin
				
                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/HZ_fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/HZ_geometry.glsl

                glState
                {
                    UV_CULL_FACE_ENABLE false
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH true
                }
            }
        }
    }

	
	


#####################################################
#Sun	
	pass #Sun
	{
		
	    passScale 1
        passEnable true
		useDataObject SunData

		shader
		{
			type defaultMeshShader
			{	
			
				StateManagerVar SSevolParams.SSsimUserealtime simRealtime 
				StateManagerVar SSevolParams.SSsimRealtimestart simRealtimestart  
				StateManagerVar SSevolParams.SSsimRealtimeend simRealtimeend 
				StateManagerVar SSevolParams.SSsimMasstimestart simMasstimestart  
				StateManagerVar SSevolParams.SSsimMasstimeend simMasstimeend
#				StateManagerVar SSevolParams.SSsimShowstart simShowstart
				StateManagerVar SSevolParams.SSsimDtmin simdtmin
				
                vertexShader   ./modules/SolarSystemEvol/shaders/meshPass0.vs
                fragmentShader ./modules/SolarSystemEvol/shaders/Sun_fragment.glsl
                geometryShader ./modules/SolarSystemEvol/shaders/Sun_geometry.glsl


				glState
				{
                    UV_BLEND_FUNC GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA 
                    UV_DEPTH_ENABLE true
                    UV_BLEND_ENABLE true
                    UV_WRITE_MASK_DEPTH false
#					UV_LINE_WIDTH 3

				}
			}	
		}
		
	}
